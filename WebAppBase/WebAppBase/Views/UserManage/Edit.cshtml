@model WebAppBase.Models.UserEditViewModel

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
	
	<div class="form-horizontal">
		<h4>UserEditViewModel</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
			<div class="col-md-10">
				<table>
					<tr>
						<th>选择</th>
						<th>权限</th>
					</tr>
					@for (int i = 0; i < Model.RolesList.Count(); i++)
					{
						<tr>
							<td>
								@{ bool userHasRole = Model.UserRoles.Contains(Model.RolesList.ToList()[i].Name);
									string checkedTarget = userHasRole ? "checked" : "";
								 }
								<input type='checkbox' name='UserRoles' value='@Model.RolesList.ToList()[i].Name' @checkedTarget />
							</td>
							<td>
								@Model.RolesList.ToList()[i].Name
							</td>
						</tr>
					}
				</table>
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
